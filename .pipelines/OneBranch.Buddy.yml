#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'mcr.microsoft.com/onebranch/cbl-mariner/build:2.0' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  DEBIAN_FRONTEND: noninteractive

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress
      sbom:
        enabled: true

    stages:
    - stage: 'Build_velox_with_UT_Enabled'
      jobs:
      - job: 'Build_velox'
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts

        steps: # These steps will be run in unrestricted container's network
          - task: MavenAuthenticate@0
            displayName: 'Maven Authenticate'
            inputs:
              artifactsFeeds: 'SynapseMaven'
          
          - task: Bash@3
            displayName: '[Prequirement] Build Environment Setup'
            inputs:
              targetType: 'inline'
              script: |
                scripts/setup-mariner.sh

          - task: Bash@3
            displayName: '[UT] Install Adapter Dependencies'
            inputs:
              targetType: 'inline'
              script: |
                curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
                sudo dnf install -y nodejs
                sudo npm install -g azurite

                cd -
                git submodule sync --recursive  
                git submodule update --init --recursive

          - task: Bash@3
            displayName: 'Build Velox'
            inputs:
              targetType: 'inline'
              script: |
                make release EXTRA_CMAKE_FLAGS=" -DVELOX_ENABLE_PARQUET=ON -DVELOX_ENABLE_ABFS=ON -DVELOX_BUILD_TESTING=ON -DCMAKE_BUILD_TYPE=release"

          - task: Bash@3
            displayName: 'Run All Unit Tests'
            inputs:
              targetType: 'inline'
              script: |
                # skip all failed unit tests, confirmed with intel team that below failed test suites also failed in their env on 11/01 rebase.
                cd _build/release && \
                ctest -j16 -VV --repeat until-pass:2 --output-on-failure
          
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: cTest
              testResultsFiles: _build/release/Testing/*/Test.xml
              testRunTitle: $(Agent.JobName)
            condition: succeededOrFailed()
            displayName: Publish test results

    - stage: 'Velox_code_format_check'
      jobs:
      - job: 'Check_velox_format'
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest'
          ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
        
        steps:
          - task: Bash@3
            displayName: 'Install clang-format-12'
            inputs:
              targetType: 'inline'
              script: |
                wget https://apt.llvm.org/llvm.sh
                chmod +x llvm.sh
                sudo ./llvm.sh 12
                sudo apt install -y clang-format-12

          - task: Bash@3
            displayName: 'Formatting check'
            inputs:
              targetType: 'inline'
              script: |
                scripts/check-code-formatting.sh
